// Generated by smfc.
// Any local changes WILL BE LOST.
// source: /home/agallego/workspace/smf/demo_apps/demo_service.fbs
package demo

import (
	"context"
	"github.com/senior7515/src/go/smf"
)

// Server
type SmfStorage interface {
	Get(context.Context, *smf.Request) ([]byte, error)
}
type SmfStorageService struct {
	SmfStorage
}

func NewSmfStorageService(s SmfStorage) *SmfStorageService {
	return &SmfStorageService{SmfStorage: s}
}
func (s *SmfStorageService) ServiceName() string {
	return "SmfStorage"
}
func (s *SmfStorageService) ServiceID() uint32 {
	return 212494116
}
func (s *SmfStorageService) MethodHandle(id uint32) smf.RawHandle {
	switch id {
	case 212494116 ^ 4121975041:
		return s.RawGet
	default:
		return nil
	}
}
func (s *SmfStorageService) RawGet(ctx context.Context, req []byte) ([]byte, error) {
	return s.SmfStorage.Get(ctx, demo.GetRootAsRequest(req, 0))
}

// Client
type SmfStorageClient struct {
	*smf.Client
}

func NewSmfStorageClient(c *smf.Client) *SmfStorageClient {
	return &SmfStorageClient{Client: c}
}
func (s *SmfStorageClient) Get(ctx context.Context, req []byte) (*demo.Response, error) {
	res, err := s.RawGet(ctx, req)
	if err != nil {
		return nil, err
	}
	return smf.GetRootAsResponse(res, 0), nil
}
func (s *SmfStorageClient) RawGet(ctx context.Context, req []byte) ([]byte, error) {
	return s.Client.SendRecv(req, 212494116^4121975041)
}
