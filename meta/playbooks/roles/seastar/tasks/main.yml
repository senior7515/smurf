---

# ignore: boost-devel libs because we compile it manually from source
# and pass in the flags. Otherwise add -boost-devel as a library here
#

- name: install deps
  become: yes
  dnf:
    name='{{item}}'
  with_items:
    - libaio-devel
    - ninja-build
    - ragel
    - hwloc-devel
    - numactl-devel
    - libpciaccess-devel
    - cryptopp-devel
    - xen-devel
    - libxml2-devel
    - xfsprogs-devel
    - gnutls-devel
    - libubsan
    - libasan
    - lksctp-tools-devel
    - lz4-devel
    - protobuf-devel
    - protobuf-compiler
    - libunwind-devel
    - systemtap-sdt-devel
  when: ansible_os_family == "RedHat"


- name: install deps
  become: yes
  apt:
    name='{{item}}'
  with_items:
    - libaio-dev
    - ninja-build
    - ragel
    - libhwloc-dev
    - libnuma-dev
    - libpciaccess-dev
    - libcrypto++-dev
    - libxen-dev
    - libxml2-dev
    - xfslibs-dev
    - libgnutls28-dev
    - liblz4-dev
    - libsctp-dev
    - g++-5
    - libprotobuf-dev
    - protobuf-compiler
    - python3
    - libunwind8-dev
    - systemtap-sdt-dev
    - libtool
  when: ansible_os_family == "Debian"


- name: programs for posix ethernet tunning and IRQ balance
  become: yes
  dnf:
    name='{{item}}'
  with_items:
    - hwloc
  when: ansible_os_family == "RedHat"


- name: Sync soure from git
  git:
    repo='https://github.com/scylladb/seastar.git'
    accept_hostkey=yes
    clone=yes
    dest='{{goobly_cache_dir}}/seastar'
    update=yes
    recursive=yes
    force=yes
    version='0ab7ae5'

- name: configure sources with dpdk enabled
  shell:
    ./configure.py --enable-dpdk --static-boost \
    --cflags="-isystem {{third_party_dir}}/include" \
    --ldflags="-L{{third_party_dir}}/lib"
  args:
    chdir: '{{goobly_cache_dir}}/seastar'
    creates: '{{goobly_cache_dir}}/seastar/build.ninja'
  when: ansible_os_family == "RedHat"

- name: configure sources with dpdk enabled
  shell:
    ./configure.py --enable-dpdk --static-boost --compiler=g++-5 \
    --cflags="-isystem {{third_party_dir}}/include" \
    --ldflags="-L{{third_party_dir}}/lib"
  args:
    chdir: '{{goobly_cache_dir}}/seastar'
    creates: '{{goobly_cache_dir}}/seastar/build.ninja'
  when: ansible_os_family == "Debian"

- name: build with ninja
  shell: "ninja-build -j$((({{ansible_processor_vcpus}}-1)))"
  args:
    chdir: '{{goobly_cache_dir}}/seastar'
    creates: '{{goobly_cache_dir}}/seastar/build/release/libseastar.a'
  when: ansible_os_family == "RedHat"

- name: build with ninja
  shell: "ninja -j$((({{ansible_processor_vcpus}}-1)))"
  args:
    chdir: '{{goobly_cache_dir}}/seastar'
    creates: '{{goobly_cache_dir}}/seastar/build/release/libseastar.a'
  when: ansible_os_family == "Debian"
